plugins {
    id 'fabric-loom' version '1.5-SNAPSHOT'
    id 'maven-publish'
}

version =  property("mod.version") + "+" + stonecutter.current.version
group = "dev.imb11"

base {
    archivesName = property("mod.name")
}

repositories {
    mavenCentral()
    maven { url "https://maven.terraformersmc.com/releases" }
    maven { url "https://maven.isxander.dev/releases" }
    maven { url "https://jitpack.io" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "https://maven.quiltmc.org/repository/release" }
    maven { url "https://maven.mineblock11.dev/releases" }
    maven { url "https://repo.sleeping.town/" }
    maven { url = "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1" }
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${stonecutter.current.version}"
    mappings "net.fabricmc:yarn:${property('deps.yarn')}:v2"

    modImplementation "net.fabricmc:fabric-loader:${property('deps.fabric_loader')}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${property('deps.fabric_api')}"

    include modImplementation("dev.isxander.yacl:yet-another-config-lib-fabric:${property('deps.yacl')}")

    modImplementation "com.mineblock11:MRU:${property('deps.mru')}"

    //	Compatability mods.
    modLocalRuntime modCompileOnly("com.terraformersmc:modmenu:${property('runtime.modmenu')}")
    modLocalRuntime modCompileOnly("dev.emi:emi-fabric:${property('runtime.emi')}")
    modLocalRuntime modCompileOnly("maven.modrinth:brb:${property('runtime.brb')}")
    modLocalRuntime("maven.modrinth:architectury-api:${property('runtime.architectury')}")
    modLocalRuntime("maven.modrinth:cloth-config:${property('runtime.cloth')}")

    if (stonecutter.current.version == "1.20.1") {
        modImplementation "folk.sisby:inventory-tabs:1.1.8+1.20"
    }
}

if (stonecutter.current.active) {
    loom {
        runConfigs.all {
            ideConfigGenerated = true
            // generate IDE tasks for running client, server and testmod, datagen if those are present
            runDir "../../run" // use a global run directory for all versions
        }
    }
}

loom {
    accessWidenerPath.set(getRootProject().file("src/main/resources/flow.accesswidener"))
}

processResources {
    filesMatching("fabric.mod.json") {
        expand 'mod_version': project.version,
                'target_minecraft': project.property('mod.target')
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}