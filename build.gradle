plugins {
	id 'fabric-loom' version '1.4-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	mavenCentral()
	maven { url "https://maven.terraformersmc.com/releases" }
	maven { url "https://maven.isxander.dev/releases" }
	maven { url "https://jitpack.io" }
	maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
	maven { url "https://maven.quiltmc.org/repository/release" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	include modImplementation("dev.isxander.yacl:yet-another-config-lib-fabric:${project.yacl_version}")

	//	Compatability mods.
	modLocalRuntime modCompileOnly("com.terraformersmc:modmenu:${project.modmenu_version}")
	modLocalRuntime modCompileOnly("dev.emi:emi-fabric:${emi_version}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}