plugins {
	id 'fabric-loom' version '1.4-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

loom {
	accessWidenerPath = file("src/main/resources/flow.accesswidener")
}

repositories {
	mavenCentral()
	maven { url "https://maven.terraformersmc.com/releases" }
	maven { url "https://maven.isxander.dev/releases" }
	maven { url "https://jitpack.io" }
	maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
	maven { url "https://maven.quiltmc.org/repository/release" }
	maven { url "https://maven.mineblock11.dev/releases" }
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered {
		it.mappings file("mappings/brb-fix.tiny")
		it.mappings("net.fabricmc:yarn:${project.yarn_mappings}:v2")
	}
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	include modImplementation("dev.isxander.yacl:yet-another-config-lib-fabric:${project.yacl_version}")

	modImplementation "com.mineblock11:MRU:${project.mru_version}"

	//	Compatability mods.
	modLocalRuntime modCompileOnly("com.terraformersmc:modmenu:${project.modmenu_version}")
	modCompileOnly("dev.emi:emi-fabric:${project.emi_version}")
	modLocalRuntime modCompileOnly("maven.modrinth:brb:${project.better_recipe_book_version}")

	include(implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:0.2.0")))
}

processResources {
	inputs.property "version", project.version
	inputs.property "mru_version", project.mru_version

	filesMatching("fabric.mod.json") {
		expand "version": project.version, "mru_version": project.mru_version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}